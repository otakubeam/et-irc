sys;

export {

    of Int -> *String -> Int
    @nomangle fun main argc argv;

    of *C_FILE -> String -> _ -> Int
    @nomangle fun fprintf stream format;

    of String -> String -> Int
    @nomangle fun dial host port;

    of *C_FILE -> Int
    @nomangle fun fflush stream;

}

type IrcdSession = struct {
    meta: struct {
        host: String,
        port: String,
        nick: String,
    },
    bufin: String,
    bufout: String,

    serv_stream: *C_FILE,
};

of String -> IrcdSession
fun init_session nick = {
    var ircd_url = "irc.oftc.net";
    var ircd_port = "6667";

    { .meta = { .host = ircd_url,
                .port = ircd_port,
                .nick = nick },
      .bufin = (new [4096] Char) ~> _,
      .bufout = (new [4096] Char) ~> _,
      .serv_stream = fdopen(dial(ircd_url, ircd_port), "r+"),
    }
};

of IrcdSession -> Int
fun server_write session =
    fprintf(session.serv_stream, "%s\r\n", session.bufout);


of IrcdSession -> Unit
fun register_user session = {
    var stream = session.serv_stream;
    var nick = session.meta.nick;
    var host = session.meta.host;

    fprintf(stream, "NICK %s\r\n", nick);
    fprintf(stream, "USER %s ", nick);
    fprintf(stream, "localhost %s ", host);
    fprintf(stream, ":%s\r\n", nick);
};

of IrcdSession -> String -> String -> Unit
fun send_message sess channel msg = {
    fprintf(sess.serv_stream, "PRIVMSG %s ", channel);
    fprintf(sess.serv_stream, ":%s\r\n", msg);
};

of IrcdSession -> String -> Unit
fun join_channel sess channel = {
    fprintf(sess.serv_stream, "JOIN %s\r\n ", channel);
};

fun main argc argv = {

    var sess = init_session(argv[1]);

    sleep(2);

    register_user(sess);

    sleep(2);

    join_channel(sess, "#etudetest");

    sleep(2);

    send_message(sess, "#etudetest", "Hello world");

    # loop(&sess);

    0
};

